- gde 10.20.2021
-Estimation for ActivitySim vehicle type model.  
-This version estimates a model where the choices are: body type x fuel type x vehicle age (individual years)
- Read in vehicle attributes, and include number of models as a variable
- Also, restrict the availability of there are zero models made

-------------------------------------------------------------------------------
- Define data input
- See NHTS codebook and MakeVehTypeEstFile.ipynb for variable defintions
file (name=estfile9.csv,handle=df,skip1)
    INDEX,
    HOUSEID,
    VEHID,
	MLGRANK,
    VEHYEAR,
    VEHAGE,
    MAKE,
    VEHMODEL,
    FUELTYPE,
    VEHTYPE,
    WHOMAIN,
    HFUEL,
    CHOICE1,
    CHOICE2,
	CHOICE3,
	CHOICE4,
	CHOICE4B,
    VEHTYPE2,
    FUELTYPE2,
    VEHAGE2,
	VEHAGE_C20,
    NEWVEH,
    HOMEOWN,
    HHSIZE,
    HHVEHCNT,
    HHFAMINC,
    DRVRCNT,
    HHSTFIPS,
    NUMADLT,
    WRKCOUNT,
    LIF_CYC,
    MSACAT,
    MSASIZE,
    RAIL,
    URBAN,
    URBANSIZE,
    URBRUR,
    CENSUS_D,
    CENSUS_R,
    CDIVMSAR,
    HH_RACE,
    HH_HISP,
	HH_CBSA, 
    SMPLSRCE,
    WTHHFIN,
    BESTMILE,
    HTHTNRNT,
    HTPPOPDN,
    HTRESDN,
    HTEEMPDN,
    HBHTNRNT,
    HBPPOPDN,
    HBRESDN,
    GSYRGAL,
    GSTOTCST,
    FEGEMPG,
    GSCOST,
    PRICE,
    PLACE,
    HHRELATD,
    YOUNGCHILD,
    CHLDRN0_4,
    CHLDRN5_15,
    CHLDRN16P,
    COLL_STDS,
    FT_WORKERS,
    PT_WORKERS,
    NW_UNDER65,
    NW_65P,
    WORKERS,
    CHILDREN,
    PERSONS16P,
    DRIVERS,
    MEN16P,
    WOMEN16P,
    DOMEST16P,
    IMMIG16P,
    DSTTOWKSUM,
    DSTTOWKAVG, 
    CAR_COUNT,
    VAN_COUNT,
    SUV_COUNT,
    PU_COUNT,
    MC_COUNT,
    GAS_COUNT,
    DSL_COUNT,
    HYB_COUNT,
    PEV_COUNT,
    BEV_COUNT,
    CB_CHG,
    CB_POP,
    CB_SQMI,
    CB_CHG_PC,
    CB_CHG_PM,
    ST_CHG,
    ST_POP,
    ST_SQMI,
    ST_CHG_PC,
    ST_CHG_PM,
    CHG_PC,
    CHG_PM


- Arrays with attributes of each alternative (index is alt)
INCL.FILE num_models.array

-------------------------------------------------------------------------------
$title ActivitySim Vehicle Type Model (@file.alo)

$print transforms
$print iter=3
$print tree=1

$gen.stats utilities all

$estimate

-------------------------------------------------------------------------------
- Data transformations

- convert to a more limited set of incomes from codes in NHTS (2017 dollars)
- $0-24,999
- $25,000-$49,999      
- $50,000-$99,999  (reference case)
- $100,000-$149,999
- $150,000+       
- missing          
    INC025   = ifin(HHFAMINC,1,3)      
    INC2550  = ifin(HHFAMINC,4,5)      
    INC50100 = ifin(HHFAMINC,6,7)   
    INC100150= ifin(HHFAMINC,8,9)  
    INC150P  = ifge(HHFAMINC,10)  
    INC_MISS = iflt(HHFAMINC,0)            

- rural (urban is reference category)
RURAL = ifeq(URBRUR,2)
	
- number of vehicles in the household vs # people of driving age
- only one vehicle in household
- fewer vehicles than drivers in household (but >1)
- same number of vehicles and drivers in household (and >1) -- reference case
- more vehicles than drivers in household (and >1)
ONEVEH = ifeq(HHVEHCNT,1)
VHLTDR = ifgt(HHVEHCNT,1) * iflt(HHVEHCNT,PERSONS16P)
VHEQDR = ifgt(HHVEHCNT,1) * ifeq(HHVEHCNT,PERSONS16P)
VHGTDR = ifgt(HHVEHCNT,1) * ifgt(HHVEHCNT,PERSONS16P)

- presense of children
CHLD_FLAG = ifge(YOUNGCHILD + CHILDREN, 1)

- number of children, capped at 3
NUM_CHLD3 = min(YOUNGCHILD + CHILDREN, 3)

- average distance to work, capped at 100 miles
DSTWK = min(DSTTOWKAVG, 100)

- total distance to work, capped at 100 miles per worker
DSTWKT = min(DSTTOWKSUM, 100*WORKERS)

- log of number of models
$ARRAY LN_NMODELS(501) 
DO i=1,501
   LN_NMODELS(i) = log(1+NMODELS(i))
END

- vehicles already owned
OWN_VAN = ifge(VAN_COUNT, 1)
OWN_SUV = ifge(SUV_COUNT, 1)	
OWN_PU  = ifge(PU_COUNT, 1)
OWN_MC  = ifge(MC_COUNT, 1)
	
OWN_HYB = ifge(HYB_COUNT, 1)	
OWN_PEV = ifge(PEV_COUNT, 1)	
OWN_BEV = ifge(BEV_COUNT, 1)
OWN_EV = ifge(PEV_COUNT + BEV_COUNT, 1)	

- household owns only vehicles of all the same type (except the current choice)
- we cap the vehicle count at 4 b/c that's what ActivitySim does
ALL_VAN = ifeq(VAN_COUNT, MIN(HHVEHCNT, 4)-1)
ALL_SUV = ifeq(SUV_COUNT, MIN(HHVEHCNT, 4)-1)
ALL_PU  = ifeq(PU_COUNT, MIN(HHVEHCNT, 4)-1)
ALL_MC  = ifeq(MC_COUNT, MIN(HHVEHCNT, 4)-1)

ALL_HYB = ifeq(HYB_COUNT, MIN(HHVEHCNT, 4)-1)
ALL_PEV = ifeq(PEV_COUNT, MIN(HHVEHCNT, 4)-1)
ALL_BEV = ifeq(BEV_COUNT, MIN(HHVEHCNT, 4)-1)

- log of chargers per capita
LN_CHG_PC = log(1+CHG_PC)

- MSA population is 1 million+
MSA1P   = ifin(MSASIZE,4,5)  

- Housing density at home block group
DEN1 = ifeq(HBRESDN, 50)
DEN2 = ifeq(HBRESDN, 300)
DEN3 = ifeq(HBRESDN, 750)
DEN4 = ifeq(HBRESDN, 1500)
DEN5 = ifeq(HBRESDN, 3000)
DEN6 = ifeq(HBRESDN, 7000)
DEN7 = ifeq(HBRESDN, 17000)
DEN8 = ifeq(HBRESDN, 30000)

DEN34 = DEN3 + DEN4
DEN78 = DEN7 + DEN8

- Household rents home
RENT = ifeq(HOMEOWN, 1)

- geographic constants

SFO = ifeq(HH_CBSA, 41860) + ifeq(HH_CBSA, 47900)
SAN = ifeq(HH_CBSA, 41740)
ATL = ifeq(HH_CBSA, 12060) 
SEA = ifeq(HH_CBSA, 42660) 
DET = ifeq(HH_CBSA, 19820) 
MSP = ifeq(HH_CBSA, 33460) 
DCA = ifeq(HH_CBSA, 47900) 
OREG = ifeq(HHSTFIPS, 41) 
OHIO = ifeq(HHSTFIPS, 39)  
SMSA = ifeq(HH_CBSA, 0) * ifeq(RURAL, 0)


-------------------------------------------------------------------------------
- Interactions with vehicle age
- 

$ARRAY INC025a(21)
$ARRAY INC2550a(21)
$ARRAY INC100150a(21)
$ARRAY INC150Pa(21)
$ARRAY INC_MISSa(21)
$ARRAY RURALa(21)
$ARRAY ONEVEHa(21)
$ARRAY VHLTDRa(21)
$ARRAY VHGTDRa(21)
$ARRAY NUM_CHLD3a(21)
$ARRAY DSTWKTa(21)

DO a=1,21
    INC025a(a)    = a * INC025
    INC2550a(a)   = a * INC2550
    INC100150a(a) = a * INC100150
    INC150Pa(a)   = a * INC150P
    INC_MISSa(a)  = a * INC_MISS
    RURALa(a)     = a * RURAL
    ONEVEHa(a)    = a * ONEVEH
    VHLTDRa(a)    = a * VHLTDR
    VHGTDRa(a)    = a * VHGTDR
    NUM_CHLD3a(a) = a * NUM_CHLD3
    DSTWKTa(a)    = a * DSTWKT
END

- geographic interaction with age

$ARRAY SFOa(21) 
$ARRAY SANa(21) 
$ARRAY ATLa(21) 
$ARRAY SEAa(21) 
$ARRAY DETa(21) 
$ARRAY MSPa(21) 
$ARRAY DCAa(21) 
$ARRAY OREGa(21)  
$ARRAY OHIOa(21)  
$ARRAY SMSAa(21) 

DO a=1,21
	SFOa(a)  = a * SFO  
	SANa(a)  = a * SAN  
	ATLa(a)  = a * ATL  
	SEAa(a)  = a * SEA  
	DETa(a)  = a * DET  
	MSPa(a)  = a * MSP  
	DCAa(a)  = a * DCA  
	OREGa(a) = a * OREG  
	OHIOa(a) = a * OHIO
	SMSAa(a) = a * SMSA 
END


-------------------------------------------------------------------------------
- Choice Set and Nesting
-   note: xx = vehicle age in years, last category is 20+
-
- Labels: 
- 11xx:'Car-Gas', 
- 12xx:'Car-Diesel',										                                                      
- 13xx:'Car-Hybrid',	                                                
- 14xx:'Car-PEV',                                                   
- 15xx:'Car-BEV',          
- 21xx:'Van-Gas', 
- 22xx:'Van-Diesel',										                                                      
- 23xx:'Van-Hybrid',
- 24xx:'Van-PEV',                                                     
- 25xx:'Van-BEV',          
- 31xx:'SUV-Gas', 
- 32xx:'SUV-Diesel',										                                                      
- 33xx:'SUV-Hybrid',	                                                  
- 34xx:'SUV-PEV',                                                    
- 35xx:'SUV-BEV',      
- 41xx:'Pickup-Gas', 
- 42xx:'Pickup-Diesel',										                                                      
- 43xx:'Pickup-Hybrid',	                                                
- 44xx:'Pickup-PEV',                                                     
- 45xx:'Pickup-BEV',     
- 51xx:'Motorcycle-Gas', 
- 52xx:'Motorcycle-Diesel',												                                                      
- 53xx:'Motorcycle-Hybrid',	                                                  
- 54xx:'Motorcycle-PEV',                                                     
- 55xx:'Motorcycle-BEV',       

CHOICE=CHOICE4B

- Nesting
$NEST ROOT () nOTH nMC

$NEST nOTH (Theta1) n1_CAR n2_CAR n3_CAR n4_CAR n5_CAR n6_CAR n7_CAR n8_CAR n9_CAR n10_CAR n11_CAR n12_CAR n13_CAR n14_CAR n15_CAR n16_CAR n17_CAR n18_CAR n19_CAR n20_CAR
                  + n1_VAN n2_VAN n3_VAN n4_VAN n5_VAN n6_VAN n7_VAN n8_VAN n9_VAN n10_VAN n11_VAN n12_VAN n13_VAN n14_VAN n15_VAN n16_VAN n17_VAN n18_VAN n19_VAN n20_VAN
                  + n1_SUV n2_SUV n3_SUV n4_SUV n5_SUV n6_SUV n7_SUV n8_SUV n9_SUV n10_SUV n11_SUV n12_SUV n13_SUV n14_SUV n15_SUV n16_SUV n17_SUV n18_SUV n19_SUV n20_SUV
                  + n1_PU n2_PU n3_PU n4_PU n5_PU n6_PU n7_PU n8_PU n9_PU n10_PU n11_PU n12_PU n13_PU n14_PU n15_PU n16_PU n17_PU n18_PU n19_PU n20_PU
$NEST nMC  (Theta1) n1_MC n2_MC n3_MC n4_MC n5_MC n6_MC n7_MC n8_MC n9_MC n10_MC n11_MC n12_MC n13_MC n14_MC n15_MC n16_MC n17_MC n18_MC n19_MC n20_MC

- alternative numbers by fuel type
$NEST	n1_CAR	(Theta2)	1	21	41	61	81
$NEST	n1_VAN	(Theta2)	101	121	141	161	181
$NEST	n1_SUV	(Theta2)	201	221	241	261	281
$NEST	n1_PU	(Theta2)	301	321	341	361	381
$NEST	n1_MC	(Theta2)	401	421	441	461	481
							
$NEST	n2_CAR	(Theta2)	2	22	42	62	82
$NEST	n2_VAN	(Theta2)	102	122	142	162	182
$NEST	n2_SUV	(Theta2)	202	222	242	262	282
$NEST	n2_PU	(Theta2)	302	322	342	362	382
$NEST	n2_MC	(Theta2)	402	422	442	462	482
							
$NEST	n3_CAR	(Theta2)	3	23	43	63	83
$NEST	n3_VAN	(Theta2)	103	123	143	163	183
$NEST	n3_SUV	(Theta2)	203	223	243	263	283
$NEST	n3_PU	(Theta2)	303	323	343	363	383
$NEST	n3_MC	(Theta2)	403	423	443	463	483
							
$NEST	n4_CAR	(Theta2)	4	24	44	64	84
$NEST	n4_VAN	(Theta2)	104	124	144	164	184
$NEST	n4_SUV	(Theta2)	204	224	244	264	284
$NEST	n4_PU	(Theta2)	304	324	344	364	384
$NEST	n4_MC	(Theta2)	404	424	444	464	484
							
$NEST	n5_CAR	(Theta2)	5	25	45	65	85
$NEST	n5_VAN	(Theta2)	105	125	145	165	185
$NEST	n5_SUV	(Theta2)	205	225	245	265	285
$NEST	n5_PU	(Theta2)	305	325	345	365	385
$NEST	n5_MC	(Theta2)	405	425	445	465	485
							
$NEST	n6_CAR	(Theta2)	6	26	46	66	86
$NEST	n6_VAN	(Theta2)	106	126	146	166	186
$NEST	n6_SUV	(Theta2)	206	226	246	266	286
$NEST	n6_PU	(Theta2)	306	326	346	366	386
$NEST	n6_MC	(Theta2)	406	426	446	466	486
							
$NEST	n7_CAR	(Theta2)	7	27	47	67	87
$NEST	n7_VAN	(Theta2)	107	127	147	167	187
$NEST	n7_SUV	(Theta2)	207	227	247	267	287
$NEST	n7_PU	(Theta2)	307	327	347	367	387
$NEST	n7_MC	(Theta2)	407	427	447	467	487
							
$NEST	n8_CAR	(Theta2)	8	28	48	68	88
$NEST	n8_VAN	(Theta2)	108	128	148	168	188
$NEST	n8_SUV	(Theta2)	208	228	248	268	288
$NEST	n8_PU	(Theta2)	308	328	348	368	388
$NEST	n8_MC	(Theta2)	408	428	448	468	488
							
$NEST	n9_CAR	(Theta2)	9	29	49	69	89
$NEST	n9_VAN	(Theta2)	109	129	149	169	189
$NEST	n9_SUV	(Theta2)	209	229	249	269	289
$NEST	n9_PU	(Theta2)	309	329	349	369	389
$NEST	n9_MC	(Theta2)	409	429	449	469	489
							
$NEST	n10_CAR	(Theta2)	10	30	50	70	90
$NEST	n10_VAN	(Theta2)	110	130	150	170	190
$NEST	n10_SUV	(Theta2)	210	230	250	270	290
$NEST	n10_PU	(Theta2)	310	330	350	370	390
$NEST	n10_MC	(Theta2)	410	430	450	470	490
							
$NEST	n11_CAR	(Theta2)	11	31	51	71	91
$NEST	n11_VAN	(Theta2)	111	131	151	171	191
$NEST	n11_SUV	(Theta2)	211	231	251	271	291
$NEST	n11_PU	(Theta2)	311	331	351	371	391
$NEST	n11_MC	(Theta2)	411	431	451	471	491
							
$NEST	n12_CAR	(Theta2)	12	32	52	72	92
$NEST	n12_VAN	(Theta2)	112	132	152	172	192
$NEST	n12_SUV	(Theta2)	212	232	252	272	292
$NEST	n12_PU	(Theta2)	312	332	352	372	392
$NEST	n12_MC	(Theta2)	412	432	452	472	492
							
$NEST	n13_CAR	(Theta2)	13	33	53	73	93
$NEST	n13_VAN	(Theta2)	113	133	153	173	193
$NEST	n13_SUV	(Theta2)	213	233	253	273	293
$NEST	n13_PU	(Theta2)	313	333	353	373	393
$NEST	n13_MC	(Theta2)	413	433	453	473	493
							
$NEST	n14_CAR	(Theta2)	14	34	54	74	94
$NEST	n14_VAN	(Theta2)	114	134	154	174	194
$NEST	n14_SUV	(Theta2)	214	234	254	274	294
$NEST	n14_PU	(Theta2)	314	334	354	374	394
$NEST	n14_MC	(Theta2)	414	434	454	474	494
							
$NEST	n15_CAR	(Theta2)	15	35	55	75	95
$NEST	n15_VAN	(Theta2)	115	135	155	175	195
$NEST	n15_SUV	(Theta2)	215	235	255	275	295
$NEST	n15_PU	(Theta2)	315	335	355	375	395
$NEST	n15_MC	(Theta2)	415	435	455	475	495
							
$NEST	n16_CAR	(Theta2)	16	36	56	76	96
$NEST	n16_VAN	(Theta2)	116	136	156	176	196
$NEST	n16_SUV	(Theta2)	216	236	256	276	296
$NEST	n16_PU	(Theta2)	316	336	356	376	396
$NEST	n16_MC	(Theta2)	416	436	456	476	496
							
$NEST	n17_CAR	(Theta2)	17	37	57	77	97
$NEST	n17_VAN	(Theta2)	117	137	157	177	197
$NEST	n17_SUV	(Theta2)	217	237	257	277	297
$NEST	n17_PU	(Theta2)	317	337	357	377	397
$NEST	n17_MC	(Theta2)	417	437	457	477	497
							
$NEST	n18_CAR	(Theta2)	18	38	58	78	98
$NEST	n18_VAN	(Theta2)	118	138	158	178	198
$NEST	n18_SUV	(Theta2)	218	238	258	278	298
$NEST	n18_PU	(Theta2)	318	338	358	378	398
$NEST	n18_MC	(Theta2)	418	438	458	478	498
							
$NEST	n19_CAR	(Theta2)	19	39	59	79	99
$NEST	n19_VAN	(Theta2)	119	139	159	179	199
$NEST	n19_SUV	(Theta2)	219	239	259	279	299
$NEST	n19_PU	(Theta2)	319	339	359	379	399
$NEST	n19_MC	(Theta2)	419	439	459	479	499
							
$NEST	n20_CAR	(Theta2)	20	40	60	80	100
$NEST	n20_VAN	(Theta2)	120	140	160	180	200
$NEST	n20_SUV	(Theta2)	220	240	260	280	300
$NEST	n20_PU	(Theta2)	320	340	360	380	400
$NEST	n20_MC	(Theta2)	420	440	460	480	500


-------------------------------------------------------------------------------
- Exclusions


-------------------------------------------------------------------------------
- Availability
- alternative is unavailable if there are no models made

$ARRAY AVAIL(501)
DO i=1,501
   AVAIL(i) = ifge(NMODELS(i),1)
END


-------------------------------------------------------------------------------
- Coefficients

- alternative specific constants by body type - car is the reference
$COEFF van, suv, pu, mc

- alternative specific constants by fuel type - gas is the reference
$COEFF dsl, hyb, pev, bev

- alternative specific constants by vehicle age - age 1
$COEFF        age2,  age3,  age4,  age5,  age6,  age7,  age8,  age9,  age10
$COEFF age11, age12, age13, age14, age15, age16, age17, age18, age19, age20

- alternative specific constants for body type X fuel type
$COEFF suvpu_dsl suvpu_hyb suvpu_ev
$COEFF mc_dsl = -99 mc_hyb = -99 mc_ev

- age shift for body type, with constant on 20+ category
$COEFF van_age, suv_age, pu_age, mc_age
$COEFF van_age20, suv_age20, pu_age20, mc_age20

- age shift for fuel type
$COEFF dsl_age, hyb_age, ev_age

- fuel economy, EV range, and EV charge time
$COEFF cmpg, crange, ccharge240, clnrange

- BEV range by distance
$COEFF crange0, crange100, crange200, crangeltwk

- number of vehicle models in the class
$COEFF nmods, ln_nmods, makes, ln_makes

- price
$COEFF cnewprice, cdepval, cannmaint

- price by income
$COEFF cprice0, cprice25, cprice50, cprice100, cprice150, cpricem

- cost of gas to commute to work
$COEFF cgaswk0, cgaswk25, cgaswk50, cgaswk100, cgaswk150, cgaswkm


- household income category
- car is the reference alternative
- gas is the reference alternative
- age is mulitplied by each value
- segment by each dimension, not every combination
  
- $0-24,999
   $COEFF i025_van, i025_suv, i025_pu, i025_mc
   $COEFF i025_hyb, i025_ev
   $COEFF i025_age, i025_a20

- $25,000-$49,999
   $COEFF i2550_van, i2550_suv, i2550_pu, i2550_mc
   $COEFF i2550_hyb, i2550_ev
   $COEFF i2550_age, i2550_a20
 
- $50,000-$99,999  Reference case
   
- $100,000-$149,999
   $COEFF i100_van, i100_suv, i100_pu, i100_mc
   $COEFF i100_hyb, i100_ev   
   $COEFF i100_age, i100_a20

- $150,000+
   $COEFF i150p_van, i150p_suv, i150p_pu, i150p_mc
   $COEFF i150p_hyb, i150p_ev   
   $COEFF i150p_age, i150p_a20

- missing income
   $COEFF imiss_van, imiss_suv, imiss_pu, imiss_mc
   $COEFF imiss_hyb, imiss_ev
   $COEFF imiss_age, imiss_a20


- rural (urban is reference category)
$COEFF rural_van, rural_suv, rural_pu, rural_mc
$COEFF rural_hyb, rural_ev
$COEFF rural_age, rural_a20


- number of vehicles in the household vs # people of driving age
- same number of vehicles and drivers in household (and >1) -- reference case

- only one vehicle in household
   $COEFF oneveh_van, oneveh_suv, oneveh_pu, oneveh_mc
   $COEFF oneveh_hyb, oneveh_ev
   $COEFF oneveh_age, oneveh_a20

- fewer vehicles than drivers in household (but >1)
   $COEFF vhltdr_van, vhltdr_suv, vhltdr_pu, vhltdr_mc
   $COEFF vhltdr_hyb, vhltdr_ev
   $COEFF vhltdr_age, vhltdr_a20

- more vehicles than drivers in household (and >1)
   $COEFF vhgtdr_van, vhgtdr_suv, vhgtdr_pu, vhgtdr_mc
   $COEFF vhgtdr_hyb, vhgtdr_ev
   $COEFF vhgtdr_age, vhgtdr_a20


- presense of children in the household (0 is reference case)
   $COEFF chld_van, chld_suv, chld_pu, chld_mc
   $COEFF chld_hyb, chld_ev
   $COEFF chld_age, chld_a20

- num of children in the household (0 is reference case)
   $COEFF nchld_van, nchld_suv, nchld_pu, nchld_mc
   $COEFF nchld_hyb, nchld_ev
   $COEFF nchld_age, nchld_a20

- average distance to work
   $COEFF dstwk_van, dstwk_suv, dstwk_pu, dstwk_mc
   $COEFF dstwk_hyb, dstwk_ev
   $COEFF dstwk_age, dstwk_a20
   
- total distance to work
   $COEFF dstwkt_van, dstwkt_suv, dstwkt_pu, dstwkt_mc
   $COEFF dstwkt_hyb, dstwkt_ev
   $COEFF dstwkt_age, dstwkt_a20

- household interactions by vehicle type
   $COEFF van_van, van_suv, van_pu, van_mc
   $COEFF          suv_suv, suv_pu, suv_mc
   $COEFF                   pu_pu,  pu_mc
   $COEFF                           mc_mc

   $COEFF hyb_hyb, hyb_pev, hyb_bev
   $COEFF          pev_pev, pev_bev
   $COEFF                   bev_bev

- household owns only vehicles of one type
   $COEFF only_van, only_suv, only_pu, only_mc
   $COEFF only_hyb, only_pev, only_bev
   
- EV chargers per capita and per square mile in state or MSA
   $COEFF ch_pc_ev, ch_pm_ev, ln_chpc_ev
- in MSA with pop 1 mil +
   $COEFF msa1p_van, msa1p_suv, msa1p_pu, msa1p_mc, msa1p_hyb, msa1p_ev, msa1p_age

- Housing density at residential census block group
   $COEFF den3_van, den3_suv, den3_pu, den3_mc, den3_hyb, den3_ev, den3_age
   $COEFF den4_van, den4_suv, den4_pu, den4_mc, den4_hyb, den4_ev, den4_age
   $COEFF den5_van, den5_suv, den5_pu, den5_mc, den5_hyb, den5_ev, den5_age
   $COEFF den6_van, den6_suv, den6_pu, den6_mc, den6_hyb, den6_ev, den6_age
   $COEFF den7_van, den7_suv, den7_pu, den7_mc, den7_hyb, den7_ev, den7_age
   $COEFF den8_van, den8_suv, den8_pu, den8_mc, den8_hyb, den8_ev, den8_age
   $COEFF den34_ev den78_ev

- Rents home
   $COEFF rent_ev
   
- Geographic constants
   $COEFF sfo_van, sfo_suv, sfo_pu, sfo_mc, sfo_hyb, sfo_ev, sfo_age
   $COEFF san_van, san_suv, san_pu, san_mc, san_hyb, san_ev, san_age
   $COEFF atl_van, atl_suv, atl_pu, atl_mc, atl_hyb, atl_ev, atl_age
   $COEFF sea_van, sea_suv, sea_pu, sea_mc, sea_hyb, sea_ev, sea_age
   $COEFF det_van, det_suv, det_pu, det_mc, det_hyb, det_ev, det_age
   $COEFF msp_van, msp_suv, msp_pu, msp_mc, msp_hyb, msp_ev, msp_age
   $COEFF dca_van, dca_suv, dca_pu, dca_mc, dca_hyb, dca_ev, dca_age
   $COEFF oreg_van, oreg_suv, oreg_pu, oreg_mc, oreg_hyb, oreg_ev, oreg_age
   $COEFF ohio_van, ohio_suv, ohio_pu, ohio_mc, ohio_hyb, ohio_ev, ohio_age
   $COEFF smsa_van, smsa_suv, smsa_pu, smsa_mc, smsa_hyb, smsa_ev, smsa_age

-------------------------------------------------------------------------------
- Starting Values (from previous run) and constraints
INCL.FILE COEFFS vehtype901.f12

$COEFF mc_dsl = -99, mc_hyb = -99, mc_pev = -99 

-------------------------------------------------------------------------------
- Utility Functions

INCL.FILE vehtype910.util
